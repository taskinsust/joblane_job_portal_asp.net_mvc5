@model Web.Joblanes.Models.ViewModel.JobSeekerEduVm
    @Styles.Render("~/Content/bootstrap-datetimepicker")
    @{
        ViewBag.Title = "AddEducationalQualification";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <div class="panel panel-default">
        <div class="panel-heading">Add Educational Qualification</div>
        <div class="panel-body">

            @using (Html.BeginForm("AddEducationalQualification", "JobSeeker"))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Degree, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Institute, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Institute, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Institute, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartingYear, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartingYear, new { htmlAttributes = new { @class = "form-control form_datetime", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.StartingYear, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PassingYear, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PassingYear, new { htmlAttributes = new { @class = "form-control form_datetime", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.PassingYear, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Result, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Result, new { htmlAttributes = new { @class = "form-control numbersOnly" } })
                            @Html.ValidationMessageFor(model => model.Result, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Add" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/bootstrap-datetimepicker")
        <script src="~/Scripts/jquery.blockUI.js"></script>
        <script src="~/Scripts/Common.js"></script>
        <script src="~/Scripts/Jobseekerjs/jobseeker.js"></script>
        <script type="text/javascript">
            $(document).on("focus", "input.form_datetime", function () {
                var today = new Date();
                var initialDate = today.getFullYear().toString() + "-" + (today.getMonth() + 1) + "-" + today.getDate().toString();
                var startDate = today.getFullYear().toString() + "-" + (1) + "-" + "01";
                //var startDate = new Date();
                var endDate = initialDate;
                $(this).datetimepicker({
                    format: "yyyy-mm-dd",
                    //autoclose: true,
                    //todayBtn: false,
                    //showMeridian: true,
                    initialDate: initialDate,
                    //startDate: startDate,
                    //endDate: endDate,
                    startView: 2,
                    minView: 2,
                    maxView: 4
                }).on('changeDate', function (ev) {
                    $(this).removeClass("highlight");
                });
            });
        </script>
    }