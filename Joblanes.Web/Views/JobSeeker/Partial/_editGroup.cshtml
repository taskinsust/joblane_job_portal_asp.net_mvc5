@using System.Activities.Statements
@model Web.Joblanes.Models.ViewModel.JobSeekerGroupVm

<div class="panel panel-default">
    <div class="panel-heading">Group/</div>
    <div class="panel-body">

        @using (Html.BeginForm("", "", FormMethod.Post, new { id = "groupForm", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true)
                <input type="hidden" class="itemId" value="@Model.Id" />
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control title" } })
                        @Html.ValidationMessageFor(model => model.Title)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-2"></div>
                    <div class="col-md-10">
                        @if (Model.IsStillMember)
                        {
                            <div class="checkbox">
                                <label>
                                    <input class="isStillMember" id="isStillMember" value="" type="checkbox" checked="checked"> I am still a member of this group
                                </label>
                            </div>
                        }
                        else
                        {
                            <div class="checkbox">
                                <label>
                                    <input class="isStillMember" id="isStillMember" value="" type="checkbox"> I am still a member of this group
                                </label>
                            </div>
                        }

                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DateFrom, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.DateFrom, new { htmlAttributes = new { @class = "form-control form_datetime dateFrom", @readonly = "readonly", } })
                        @Html.ValidationMessageFor(model => model.DateFrom)
                    </div>
                    <div id="isCurrentDateToGroup">
                        @Html.LabelFor(model => model.DateTo, new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.DateTo, new { htmlAttributes = new { @class = "form-control form_datetime dateTo", @readonly = "readonly", } })
                            @Html.ValidationMessageFor(model => model.DateTo)
                        </div>
                    </div>
                    @*@Html.LabelFor(model => model.DateTo, new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.DateTo, new { htmlAttributes = new { @class = "form-control form_datetime dateTo", @readonly = "readonly", } })
                        @Html.ValidationMessageFor(model => model.DateTo)
                    </div>*@
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control description" })
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="saveGroupBtn" type="button" value="Update" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    $.validator.unobtrusive.parse("#groupForm");
</script>


