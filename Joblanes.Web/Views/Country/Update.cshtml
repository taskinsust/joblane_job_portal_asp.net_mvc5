@model Web.Joblanes.Models.ViewModel.CountryViewModel
@{
    ViewBag.Title = "Edit Country";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row" style="padding-right: 10px;">
    <div class="col-md-12">
        <div class="panel panel-primary">
            <div class="panel-heading custom-panel-h">Edit Country</div>

            <div class="panel-body">

                @using (Html.BeginForm("Update","Country", FormMethod.Post, new { id = "profileForm", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.HiddenFor(model => model.Id)
                        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                        <div class="row form-group">
                            @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Region, (System.Web.Mvc.SelectList)ViewBag.RegionList, "Select Region", new { @class = "form-control" })
                                @*@Html.DropDownListFor(x => x.Region, (IEnumerable<SelectListItem>) ViewBag.StatusList, new {@class = "form-control"})*@
                                @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CallingCode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CallingCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CallingCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Flag, new {@class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Flag, new {@class = "form-control", @type = "file"})
                                @Html.ValidationMessageFor(model => model.Flag, "", new {@class = "text-danger"})
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(x => x.Status, (IEnumerable<SelectListItem>)ViewBag.StatusList, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <input type="submit" value="Edit" class="btn btn-primary" id="submit" />
                                @Html.ActionLink("Back to List", "Index", "Country", new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>

    </div>
</div>
